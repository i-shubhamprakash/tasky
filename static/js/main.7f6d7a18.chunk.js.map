{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDragStart","e","task","dataTransfer","setData","name","handleOnDragOver","preventDefault","handleOnDrop","category","taskName","getData","tasks","state","filter","setState","objectSpread","handleAdd","newItem","prompt","newTasks","concat","toConsumableArray","_this2","todo","doing","done","forEach","push","react_default","a","createElement","className","key","draggable","onDragStart","href","rel","target","App_Todo","App_Doing","App_Done","Component","Todo","_this3","onDragOver","onDrop","onClick","Doing","_this4","Done","_this5","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f6d7a18.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks:[\n        {name:\"Go market\", category:\"todo\"},\n        {name:\"Buy food\", category:\"todo\"},\n        {name:\"Eat dinner\", category:\"todo\"},\n        {name:\"code\", category:\"doing\"},\n        {name:\"Learn React\", category:\"done\"},\n        {name:\"Do Project\", category:\"doing\"},\n        {name:\"Go to sleep\", category:\"todo\"}\n\n      ]\n    };\n    // This line is important!\n    // this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleDragStart=(e,task)=>{\n    // console.log(\"Drag start\");\n    e.dataTransfer.setData(\"id\",task.name);\n    // e.target.style.opacity = \"0.4\";\n  }\n\n\n  handleOnDragOver=(e)=>{\n    //This makes item droppable\n    e.preventDefault();\n    // console.log(\"Drag over\");\n    \n  } \n  \n  handleOnDrop=(e,category)=>{\n    e.preventDefault();\n    let taskName= e.dataTransfer.getData(\"id\");\n    let tasks= this.state.tasks.filter(task=>{\n      if(task.name===taskName)\n      task.category=category;\n      return task;\n    });\n    // console.log(taskName);\n    // console.log(category);\n    // console.log(e.target.className);\n    // console.log(\"Dropped\");\n    // console.log(tasks);\n    // update state\n\n    this.setState({...this.state, tasks });\n    \n  }\n  handleAdd=(e,category)=>{\n    let newItem= prompt(\"Add a new task...\",\"\");\n    // console.log(newItem);\n    if(newItem){\n        let newTasks= [...this.state.tasks,{name:newItem,category:category}];\n      // console.log(newTasks);\n      this.setState({\n        tasks: newTasks\n      });\n    }\n  }\n\n  render() {\n    let tasks={\n      todo:[],\n      doing:[],\n      done: []\n    }\n\n    this.state.tasks.forEach(task => {\n      tasks[task.category].push(\n        <div className=\"task\" key={task.name} draggable onDragStart={e=>this.handleDragStart(e,task)}>\n          <p className=\"task-text\">{task.name}</p>\n          <div className=\"task-controls\">\n            {/* Add delete functionality here*/}\n          </div>\n        </div>\n      );  \n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"credit\">\n          <div className=\"social\">\n          <a href=\"https://linkedin.com/in/ishubhamprakash/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fa fa-linkedin\"></i>\n          </a>\n          <a href=\"https://github.com/i-shubhamprakash\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fa fa-github\"></i>\n          </a>\n          <a href=\"https://twitter.com/iSuvm\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fa fa-twitter\"></i>\n          </a>\n          </div>\n        </div>\n      <div className=\"header\">\n        <h1 className=\"h5\"><i className=\"fa fa-tasks\"> </i> Tasky</h1>\n      </div>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col col-12 col-md-4\">\n              <Todo \n              tasks={tasks} \n              handleOnDragOver={e=>this.handleOnDragOver(e)} \n              handleOnDrop={e=>this.handleOnDrop(e,\"todo\")}\n              handleAdd={e=>this.handleAdd(e,\"todo\")}/>\n            </div>\n            <div className=\"col col-12 col-md-4\">\n              <Doing \n              tasks={tasks} \n              handleOnDragOver={e=>this.handleOnDragOver(e)} \n              handleOnDrop={e=>this.handleOnDrop(e,\"doing\")}\n              handleAdd={e=>this.handleAdd(e,\"doing\")}/>\n            </div>\n            <div className=\"col col-12 col-md-4\">\n              <Done \n              tasks={tasks} \n              handleOnDragOver={e=>this.handleOnDragOver(e)} \n              handleOnDrop={e=>this.handleOnDrop(e,\"done\")}\n              handleAdd={e=>this.handleAdd(e,\"done\")}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Todo extends Component {\n  render(){\n    return(\n      \n      <div className=\"task-container\"\n        onDragOver={e=> this.props.handleOnDragOver(e)}\n        onDrop={e=>this.props.handleOnDrop(e)}>\n          <div className=\"task-top\">\n            <p>TODO</p>\n          </div>\n          <div className=\"task-holder\">\n            <div className=\"todo-container\">\n              {this.props.tasks.todo}\n            </div>\n          </div>\n          <div className=\"add-task-container\">\n            <div className=\"add-task\" onClick={e=>{this.props.handleAdd(e)}}>\n              <i className=\"fa fa-plus\"></i>\n            </div>\n          </div>\n      </div>\n      \n    );\n  }\n}\nclass Doing extends Component {\n  render(){\n    return(\n      <div className=\"task-container\"\n        onDragOver={e=> this.props.handleOnDragOver(e)}\n        onDrop={e=>this.props.handleOnDrop(e)}>\n          <div className=\"task-top\">\n            <p>DOING</p>\n          </div>\n          <div className=\"task-holder\">\n            <div className=\"doing-container\">\n              {this.props.tasks.doing}\n            </div>\n          </div>\n          <div className=\"add-task-container\">\n            <div className=\"add-task\" onClick={e=>{this.props.handleAdd(e)}}>\n              <i className=\"fa fa-plus\"></i>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\nclass Done extends Component {\n  render(){\n    return(\n      <div className=\"task-container\"\n        onDragOver={e=> this.props.handleOnDragOver(e)}\n        onDrop={e=>this.props.handleOnDrop(e)}>\n          <div className=\"task-top\">\n            <p>DONE</p>\n          </div>\n          <div className=\"task-holder\">\n            <div className=\"done-container\">\n                {this.props.tasks.done}\n            </div>\n          </div>\n          <div className=\"add-task-container\">\n            <div className=\"add-task\" onClick={e=>{this.props.handleAdd(e)}}>\n              <i className=\"fa fa-plus\"></i>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}